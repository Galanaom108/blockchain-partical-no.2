{
	"id": "1339b6ca0a068f7cd07849ab4de5ef4e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"pratical_no 2./Logical_oprator.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.0;\r\n\r\n\r\ncontract logical {\r\n\t\r\nfunction logicaloperator (bool a , bool b) public pure returns (bool, bool, bool) {\r\n\t// Logical AND\r\n\tbool logicaland = a && b;\r\n\t\r\n\t// Logical OR\r\n\tbool logicalor = a || b;\r\n\t\r\n\t// Logical NOT\r\n\tbool logicalnot = !b;\r\n\t\r\n\treturn (logicaland, logicalor, logicalnot);\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"pratical_no 2./Logical_oprator.sol": {
				"logical": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "a",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "b",
									"type": "bool"
								}
							],
							"name": "logicaloperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"pratical_no 2./Logical_oprator.sol\":66:362  contract logical {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"pratical_no 2./Logical_oprator.sol\":66:362  contract logical {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7b377207\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"pratical_no 2./Logical_oprator.sol\":89:359  function logicaloperator (bool a , bool b) public pure returns (bool, bool, bool) {\r... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"pratical_no 2./Logical_oprator.sol\":153:157  bool */\n      0x00\n        /* \"pratical_no 2./Logical_oprator.sol\":159:163  bool */\n      dup1\n        /* \"pratical_no 2./Logical_oprator.sol\":165:169  bool */\n      0x00\n        /* \"pratical_no 2./Logical_oprator.sol\":192:207  bool logicaland */\n      dup1\n        /* \"pratical_no 2./Logical_oprator.sol\":210:211  a */\n      dup6\n        /* \"pratical_no 2./Logical_oprator.sol\":210:216  a && b */\n      dup1\n      iszero\n      tag_11\n      jumpi\n      pop\n        /* \"pratical_no 2./Logical_oprator.sol\":215:216  b */\n      dup5\n        /* \"pratical_no 2./Logical_oprator.sol\":210:216  a && b */\n    tag_11:\n        /* \"pratical_no 2./Logical_oprator.sol\":192:216  bool logicaland = a && b */\n      swap1\n      pop\n        /* \"pratical_no 2./Logical_oprator.sol\":239:253  bool logicalor */\n      0x00\n        /* \"pratical_no 2./Logical_oprator.sol\":256:257  a */\n      dup7\n        /* \"pratical_no 2./Logical_oprator.sol\":256:262  a || b */\n      dup1\n      tag_12\n      jumpi\n      pop\n        /* \"pratical_no 2./Logical_oprator.sol\":261:262  b */\n      dup6\n        /* \"pratical_no 2./Logical_oprator.sol\":256:262  a || b */\n    tag_12:\n        /* \"pratical_no 2./Logical_oprator.sol\":239:262  bool logicalor = a || b */\n      swap1\n      pop\n        /* \"pratical_no 2./Logical_oprator.sol\":286:301  bool logicalnot */\n      0x00\n        /* \"pratical_no 2./Logical_oprator.sol\":305:306  b */\n      dup7\n        /* \"pratical_no 2./Logical_oprator.sol\":304:306  !b */\n      iszero\n        /* \"pratical_no 2./Logical_oprator.sol\":286:306  bool logicalnot = !b */\n      swap1\n      pop\n        /* \"pratical_no 2./Logical_oprator.sol\":321:331  logicaland */\n      dup3\n        /* \"pratical_no 2./Logical_oprator.sol\":333:342  logicalor */\n      dup3\n        /* \"pratical_no 2./Logical_oprator.sol\":344:354  logicalnot */\n      dup3\n        /* \"pratical_no 2./Logical_oprator.sol\":313:355  return (logicaland, logicalor, logicalnot) */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"pratical_no 2./Logical_oprator.sol\":89:359  function logicaloperator (bool a , bool b) public pure returns (bool, bool, bool) {\r... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7:140   */\n    tag_14:\n      0x00\n        /* \"#utility.yul\":88:94   */\n      dup2\n        /* \"#utility.yul\":75:95   */\n      calldataload\n        /* \"#utility.yul\":66:95   */\n      swap1\n      pop\n        /* \"#utility.yul\":104:134   */\n      tag_16\n        /* \"#utility.yul\":128:133   */\n      dup2\n        /* \"#utility.yul\":104:134   */\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":56:140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":146:541   */\n    tag_6:\n      0x00\n      dup1\n        /* \"#utility.yul\":265:267   */\n      0x40\n        /* \"#utility.yul\":253:262   */\n      dup4\n        /* \"#utility.yul\":244:251   */\n      dup6\n        /* \"#utility.yul\":240:263   */\n      sub\n        /* \"#utility.yul\":236:268   */\n      slt\n        /* \"#utility.yul\":233:235   */\n      iszero\n      tag_19\n      jumpi\n        /* \"#utility.yul\":281:282   */\n      0x00\n        /* \"#utility.yul\":278:279   */\n      dup1\n        /* \"#utility.yul\":271:283   */\n      revert\n        /* \"#utility.yul\":233:235   */\n    tag_19:\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":349:399   */\n      tag_20\n        /* \"#utility.yul\":391:398   */\n      dup6\n        /* \"#utility.yul\":382:388   */\n      dup3\n        /* \"#utility.yul\":371:380   */\n      dup7\n        /* \"#utility.yul\":367:389   */\n      add\n        /* \"#utility.yul\":349:399   */\n      tag_14\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":339:399   */\n      swap3\n      pop\n        /* \"#utility.yul\":295:409   */\n      pop\n        /* \"#utility.yul\":448:450   */\n      0x20\n        /* \"#utility.yul\":474:524   */\n      tag_21\n        /* \"#utility.yul\":516:523   */\n      dup6\n        /* \"#utility.yul\":507:513   */\n      dup3\n        /* \"#utility.yul\":496:505   */\n      dup7\n        /* \"#utility.yul\":492:514   */\n      add\n        /* \"#utility.yul\":474:524   */\n      tag_14\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":464:524   */\n      swap2\n      pop\n        /* \"#utility.yul\":419:534   */\n      pop\n        /* \"#utility.yul\":223:541   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":547:656   */\n    tag_22:\n        /* \"#utility.yul\":628:649   */\n      tag_24\n        /* \"#utility.yul\":643:648   */\n      dup2\n        /* \"#utility.yul\":628:649   */\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":623:626   */\n      dup3\n        /* \"#utility.yul\":616:650   */\n      mstore\n        /* \"#utility.yul\":606:656   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":662:1068   */\n    tag_9:\n      0x00\n        /* \"#utility.yul\":831:833   */\n      0x60\n        /* \"#utility.yul\":820:829   */\n      dup3\n        /* \"#utility.yul\":816:834   */\n      add\n        /* \"#utility.yul\":808:834   */\n      swap1\n      pop\n        /* \"#utility.yul\":844:909   */\n      tag_27\n        /* \"#utility.yul\":906:907   */\n      0x00\n        /* \"#utility.yul\":895:904   */\n      dup4\n        /* \"#utility.yul\":891:908   */\n      add\n        /* \"#utility.yul\":882:888   */\n      dup7\n        /* \"#utility.yul\":844:909   */\n      tag_22\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":919:985   */\n      tag_28\n        /* \"#utility.yul\":981:983   */\n      0x20\n        /* \"#utility.yul\":970:979   */\n      dup4\n        /* \"#utility.yul\":966:984   */\n      add\n        /* \"#utility.yul\":957:963   */\n      dup6\n        /* \"#utility.yul\":919:985   */\n      tag_22\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":995:1061   */\n      tag_29\n        /* \"#utility.yul\":1057:1059   */\n      0x40\n        /* \"#utility.yul\":1046:1055   */\n      dup4\n        /* \"#utility.yul\":1042:1060   */\n      add\n        /* \"#utility.yul\":1033:1039   */\n      dup5\n        /* \"#utility.yul\":995:1061   */\n      tag_22\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":798:1068   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1074:1164   */\n    tag_25:\n      0x00\n        /* \"#utility.yul\":1151:1156   */\n      dup2\n        /* \"#utility.yul\":1144:1157   */\n      iszero\n        /* \"#utility.yul\":1137:1158   */\n      iszero\n        /* \"#utility.yul\":1126:1158   */\n      swap1\n      pop\n        /* \"#utility.yul\":1116:1164   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1286   */\n    tag_17:\n        /* \"#utility.yul\":1240:1261   */\n      tag_32\n        /* \"#utility.yul\":1255:1260   */\n      dup2\n        /* \"#utility.yul\":1240:1261   */\n      tag_25\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":1233:1238   */\n      dup2\n        /* \"#utility.yul\":1230:1262   */\n      eq\n        /* \"#utility.yul\":1220:1222   */\n      tag_33\n      jumpi\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1273:1274   */\n      dup1\n        /* \"#utility.yul\":1266:1278   */\n      revert\n        /* \"#utility.yul\":1220:1222   */\n    tag_33:\n        /* \"#utility.yul\":1210:1286   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209fa3bb7e82fe418511032d62892c4685034405b2f9d8eeb5e18a80a30e2d541364736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061018a806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80637b37720714610030575b600080fd5b61004a600480360381019061004591906100af565b610062565b604051610059939291906100fa565b60405180910390f35b6000806000808580156100725750845b90506000868061007f5750855b90506000861590508282829550955095505050509250925092565b6000813590506100a98161013d565b92915050565b600080604083850312156100c257600080fd5b60006100d08582860161009a565b92505060206100e18582860161009a565b9150509250929050565b6100f481610131565b82525050565b600060608201905061010f60008301866100eb565b61011c60208301856100eb565b61012960408301846100eb565b949350505050565b60008115159050919050565b61014681610131565b811461015157600080fd5b5056fea26469706673582212209fa3bb7e82fe418511032d62892c4685034405b2f9d8eeb5e18a80a30e2d541364736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B377207 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xAF JUMP JUMPDEST PUSH2 0x62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP6 DUP1 ISZERO PUSH2 0x72 JUMPI POP DUP5 JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP1 PUSH2 0x7F JUMPI POP DUP6 JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 ISZERO SWAP1 POP DUP3 DUP3 DUP3 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA9 DUP2 PUSH2 0x13D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD0 DUP6 DUP3 DUP7 ADD PUSH2 0x9A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE1 DUP6 DUP3 DUP7 ADD PUSH2 0x9A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xF4 DUP2 PUSH2 0x131 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xEB JUMP JUMPDEST PUSH2 0x11C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEB JUMP JUMPDEST PUSH2 0x129 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146 DUP2 PUSH2 0x131 JUMP JUMPDEST DUP2 EQ PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 LOG3 0xBB PUSH31 0x82FE418511032D62892C4685034405B2F9D8EEB5E18A80A30E2D541364736F PUSH13 0x63430008000033000000000000 ",
							"sourceMap": "66:296:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1289:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "56:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "66:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "88:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "75:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "75:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "66:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "128:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "104:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "104:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "104:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "34:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "42:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "50:5:1",
														"type": ""
													}
												],
												"src": "7:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "223:318:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "269:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "278:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "281:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "271:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "271:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "271:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "244:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "253:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "240:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "240:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "265:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "236:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "236:32:1"
															},
															"nodeType": "YulIf",
															"src": "233:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "295:114:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "310:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "324:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "314:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "339:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "371:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "382:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "367:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "367:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "391:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "349:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "349:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "339:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "419:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "434:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "448:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "438:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "464:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "496:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "507:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "492:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "492:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "516:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "474:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "474:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "464:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "216:6:1",
														"type": ""
													}
												],
												"src": "146:395:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "606:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "623:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "643:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "628:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "628:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "616:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "616:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "594:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "601:3:1",
														"type": ""
													}
												],
												"src": "547:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "798:270:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "808:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "820:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "831:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "816:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "808:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "895:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "906:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "891:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "891:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "844:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "844:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "844:65:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "957:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "970:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "981:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "966:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "966:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "919:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "919:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "919:66:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1033:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1046:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1057:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1042:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1042:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "995:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "995:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "995:66:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bool_t_bool__to_t_bool_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "754:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "766:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "774:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "782:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "793:4:1",
														"type": ""
													}
												],
												"src": "662:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1116:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1126:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1151:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1144:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1144:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1137:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1137:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1126:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1108:7:1",
														"type": ""
													}
												],
												"src": "1074:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1210:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1264:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1273:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1276:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1266:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1266:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1233:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1255:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "1240:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1240:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1230:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1230:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1223:40:1"
															},
															"nodeType": "YulIf",
															"src": "1220:2:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:1",
														"type": ""
													}
												],
												"src": "1170:116:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_boolt_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_bool_t_bool__to_t_bool_t_bool_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80637b37720714610030575b600080fd5b61004a600480360381019061004591906100af565b610062565b604051610059939291906100fa565b60405180910390f35b6000806000808580156100725750845b90506000868061007f5750855b90506000861590508282829550955095505050509250925092565b6000813590506100a98161013d565b92915050565b600080604083850312156100c257600080fd5b60006100d08582860161009a565b92505060206100e18582860161009a565b9150509250929050565b6100f481610131565b82525050565b600060608201905061010f60008301866100eb565b61011c60208301856100eb565b61012960408301846100eb565b949350505050565b60008115159050919050565b61014681610131565b811461015157600080fd5b5056fea26469706673582212209fa3bb7e82fe418511032d62892c4685034405b2f9d8eeb5e18a80a30e2d541364736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B377207 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xAF JUMP JUMPDEST PUSH2 0x62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP6 DUP1 ISZERO PUSH2 0x72 JUMPI POP DUP5 JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP1 PUSH2 0x7F JUMPI POP DUP6 JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 ISZERO SWAP1 POP DUP3 DUP3 DUP3 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA9 DUP2 PUSH2 0x13D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD0 DUP6 DUP3 DUP7 ADD PUSH2 0x9A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE1 DUP6 DUP3 DUP7 ADD PUSH2 0x9A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xF4 DUP2 PUSH2 0x131 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xEB JUMP JUMPDEST PUSH2 0x11C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEB JUMP JUMPDEST PUSH2 0x129 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146 DUP2 PUSH2 0x131 JUMP JUMPDEST DUP2 EQ PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 LOG3 0xBB PUSH31 0x82FE418511032D62892C4685034405B2F9D8EEB5E18A80A30E2D541364736F PUSH13 0x63430008000033000000000000 ",
							"sourceMap": "66:296:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;89:270;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;153:4;159;165;192:15;210:1;:6;;;;;215:1;210:6;192:24;;239:14;256:1;:6;;;;261:1;256:6;239:23;;286:15;305:1;304:2;286:20;;321:10;333:9;344:10;313:42;;;;;;;;;89:270;;;;;:::o;7:133:1:-;;88:6;75:20;66:29;;104:30;128:5;104:30;:::i;:::-;56:84;;;;:::o;146:395::-;;;265:2;253:9;244:7;240:23;236:32;233:2;;;281:1;278;271:12;233:2;324:1;349:50;391:7;382:6;371:9;367:22;349:50;:::i;:::-;339:60;;295:114;448:2;474:50;516:7;507:6;496:9;492:22;474:50;:::i;:::-;464:60;;419:115;223:318;;;;;:::o;547:109::-;628:21;643:5;628:21;:::i;:::-;623:3;616:34;606:50;;:::o;662:406::-;;831:2;820:9;816:18;808:26;;844:65;906:1;895:9;891:17;882:6;844:65;:::i;:::-;919:66;981:2;970:9;966:18;957:6;919:66;:::i;:::-;995;1057:2;1046:9;1042:18;1033:6;995:66;:::i;:::-;798:270;;;;;;:::o;1074:90::-;;1151:5;1144:13;1137:21;1126:32;;1116:48;;;:::o;1170:116::-;1240:21;1255:5;1240:21;:::i;:::-;1233:5;1230:32;1220:2;;1276:1;1273;1266:12;1220:2;1210:76;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "78800",
								"executionCost": "129",
								"totalCost": "78929"
							},
							"external": {
								"logicaloperator(bool,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 362,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 66,
									"end": 362,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66,
									"end": 362,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 362,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 362,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 362,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 66,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 362,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 66,
									"end": 362,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 362,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 362,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 66,
									"end": 362,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 362,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66,
									"end": 362,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66,
									"end": 362,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 362,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 362,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 362,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 362,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 66,
									"end": 362,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 362,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209fa3bb7e82fe418511032d62892c4685034405b2f9d8eeb5e18a80a30e2d541364736f6c63430008000033",
									".code": [
										{
											"begin": 66,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 362,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 362,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 66,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 362,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 362,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 362,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 362,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 362,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 362,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 66,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 362,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 66,
											"end": 362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "7B377207"
										},
										{
											"begin": 66,
											"end": 362,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 66,
											"end": 362,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 362,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 362,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 89,
											"end": 359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 89,
											"end": 359,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 89,
											"end": 359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 89,
											"end": 359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 89,
											"end": 359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 89,
											"end": 359,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 89,
											"end": 359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 89,
											"end": 359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 89,
											"end": 359,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 89,
											"end": 359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 89,
											"end": 359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 89,
											"end": 359,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 89,
											"end": 359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 89,
											"end": 359,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 89,
											"end": 359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 89,
											"end": 359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 89,
											"end": 359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 153,
											"end": 157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 210,
											"end": 211,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 210,
											"end": 216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 210,
											"end": 216,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 210,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 210,
											"end": 216,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 210,
											"end": 216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 215,
											"end": 216,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 210,
											"end": 216,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 210,
											"end": 216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 239,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 257,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 256,
											"end": 262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 256,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 256,
											"end": 262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 256,
											"end": 262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 261,
											"end": 262,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 256,
											"end": 262,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 256,
											"end": 262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 239,
											"end": 262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 239,
											"end": 262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 286,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 304,
											"end": 306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 286,
											"end": 306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 321,
											"end": 331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 333,
											"end": 342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 344,
											"end": 354,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 313,
											"end": 355,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 313,
											"end": 355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 313,
											"end": 355,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 313,
											"end": 355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 313,
											"end": 355,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 313,
											"end": 355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 313,
											"end": 355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 313,
											"end": 355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 313,
											"end": 355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 89,
											"end": 359,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 94,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 75,
											"end": 95,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 66,
											"end": 95,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 66,
											"end": 95,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 128,
											"end": 133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 56,
											"end": 140,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 56,
											"end": 140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 56,
											"end": 140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 56,
											"end": 140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 56,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 146,
											"end": 541,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 146,
											"end": 541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 265,
											"end": 267,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 262,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 244,
											"end": 251,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 240,
											"end": 263,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 236,
											"end": 268,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 233,
											"end": 235,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 233,
											"end": 235,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 281,
											"end": 282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 271,
											"end": 283,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 233,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 233,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 391,
											"end": 398,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 382,
											"end": 388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 371,
											"end": 380,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 367,
											"end": 389,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 349,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 349,
											"end": 399,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 349,
											"end": 399,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 349,
											"end": 399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 339,
											"end": 399,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 339,
											"end": 399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 295,
											"end": 409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 448,
											"end": 450,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 474,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 516,
											"end": 523,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 496,
											"end": 505,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 492,
											"end": 514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 474,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 474,
											"end": 524,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 474,
											"end": 524,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 474,
											"end": 524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 464,
											"end": 524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 464,
											"end": 524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 223,
											"end": 541,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 223,
											"end": 541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 223,
											"end": 541,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 223,
											"end": 541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 223,
											"end": 541,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 547,
											"end": 656,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 547,
											"end": 656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 643,
											"end": 648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 628,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 623,
											"end": 626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 616,
											"end": 650,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 606,
											"end": 656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 606,
											"end": 656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 606,
											"end": 656,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 662,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 662,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 662,
											"end": 1068,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 820,
											"end": 829,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 816,
											"end": 834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 808,
											"end": 834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 808,
											"end": 834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 844,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 906,
											"end": 907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 904,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 891,
											"end": 908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 844,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 844,
											"end": 909,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 844,
											"end": 909,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 844,
											"end": 909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 919,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 981,
											"end": 983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 970,
											"end": 979,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 966,
											"end": 984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 957,
											"end": 963,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 919,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 919,
											"end": 985,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 919,
											"end": 985,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 919,
											"end": 985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1057,
											"end": 1059,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1055,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1033,
											"end": 1039,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 995,
											"end": 1061,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 995,
											"end": 1061,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 995,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1068,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1068,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1068,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1074,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1074,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1157,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1158,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1164,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1170,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1170,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1255,
											"end": 1260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1240,
											"end": 1261,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1261,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1240,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1262,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1220,
											"end": 1222,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1222,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1220,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1286,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"logicaloperator(bool,bool)": "7b377207"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"a\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"b\",\"type\":\"bool\"}],\"name\":\"logicaloperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"pratical_no 2./Logical_oprator.sol\":\"logical\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"pratical_no 2./Logical_oprator.sol\":{\"keccak256\":\"0xdd670573df264c1493254ed569c29b6ba63687f29ad1e91b0c2197bce85671e7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://22e26d9f94c0d56987ca798a84721d422e46d3d7bd09caaadc0cad330f56c312\",\"dweb:/ipfs/QmPwZMZpmXfE8egSywr5ZaQei82YeKhbK2Wfr5z4TXsuGU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"pratical_no 2./Logical_oprator.sol": {
				"ast": {
					"absolutePath": "pratical_no 2./Logical_oprator.sol",
					"exportedSymbols": {
						"logical": [
							38
						]
					},
					"id": 39,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 38,
							"linearizedBaseContracts": [
								38
							],
							"name": "logical",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "171:188:0",
										"statements": [
											{
												"assignments": [
													15
												],
												"declarations": [
													{
														"constant": false,
														"id": 15,
														"mutability": "mutable",
														"name": "logicaland",
														"nodeType": "VariableDeclaration",
														"scope": 36,
														"src": "192:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 14,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "192:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 19,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 16,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 17,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "215:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "210:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "192:24:0"
											},
											{
												"assignments": [
													21
												],
												"declarations": [
													{
														"constant": false,
														"id": 21,
														"mutability": "mutable",
														"name": "logicalor",
														"nodeType": "VariableDeclaration",
														"scope": 36,
														"src": "239:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 20,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "239:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 25,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 22,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "256:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 23,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "261:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "256:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "239:23:0"
											},
											{
												"assignments": [
													27
												],
												"declarations": [
													{
														"constant": false,
														"id": 27,
														"mutability": "mutable",
														"name": "logicalnot",
														"nodeType": "VariableDeclaration",
														"scope": 36,
														"src": "286:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 26,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "286:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 30,
												"initialValue": {
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "304:2:0",
													"subExpression": {
														"id": 28,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "305:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "286:20:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 31,
															"name": "logicaland",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "321:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 32,
															"name": "logicalor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "333:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 33,
															"name": "logicalnot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "344:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 34,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "320:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_bool_$",
														"typeString": "tuple(bool,bool,bool)"
													}
												},
												"functionReturnParameters": 13,
												"id": 35,
												"nodeType": "Return",
												"src": "313:42:0"
											}
										]
									},
									"functionSelector": "7b377207",
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "logicaloperator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "115:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "115:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "124:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "124:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "114:17:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "153:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "153:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "159:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "159:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "165:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 11,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "165:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "152:18:0"
									},
									"scope": 38,
									"src": "89:270:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 39,
							"src": "66:296:0"
						}
					],
					"src": "37:345:0"
				},
				"id": 0
			}
		}
	}
}